<!-- 
/**
 * PpitCore V1.0 (https://github.com/p-pit/PpitCore)
 *
 * @link      https://github.com/p-pit/PpitCore
 * @copyright Copyright (c) 2016 Bruno Lartillot
 * @license   https://github.com/p-pit/PpitCore/blob/master/license.txt GNU-GPL license
 */
-->

<?php echo $this->partial('/partials/search-scripts-v2') ?>

<script>
var criterion = 'caption', dir = 'ASC';

function vcardSearch()
{
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", '<?php echo $this->url('vcard/search', array('type' => $type)) ?>', false);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      document.getElementById('index_panel').innerHTML = xhttp.responseText;
      
      // Connect the erase button that reset all the search engine inputs and checks and refresh the list
      $('#erase-button').click(function() {
        $('.search_input').val('');
        $('.search_selectpicker').selectpicker('refresh');
        $('.search_check_value').val('0');
        $('.search_check').removeClass('btn-secondary').addClass('btn-default').removeClass('active');
        $('#erase-button').removeClass('btn-success').addClass('btn-default');
        $('#erase-button').attr('disabled', 'disabled');
        getVcardList(getSearchParams(''));
      });

      $('.search_selectpicker').selectpicker('refresh');

      // Connect the date picker on date inputs
      $('.search_input_date').datepicker();

      // Trigger the change event on search inputs and refresh the list
      $('.search_input').change(function () {
        if ($(this).attr('id')) {
          var propertyId = $(this).attr('id').split('-')[1];
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#search_check_value-' + propertyId).val('1');
	      getVcardList(getSearchParams(''));
        }
      }); 

      // Trigger the keyup event on search inputs and refresh the list
      $('.search_input').keyup(function () {
        if ($(this).attr('id')) {
          if ($(this).val().length > 2) {
            var propertyId = $(this).attr('id').split('-')[1];
            $('#erase-button').removeClass('btn-default').addClass('btn-success');
            $('#erase-button').attr('disabled', false);
            $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
            $('#search_check_value-' + propertyId).val('1');
            getVcardList(getSearchParams(''));
          }
        }
      });

      // Trigger the click event on per-property checks (allowing to search on empty values) and refresh the list
      $('.search_check').click(function() {
        $('#erase-button').removeClass('btn-default').addClass('btn-success');
        $('#erase-button').attr('disabled', false);
        var propertyId = $(this).attr('id').split('-')[1], check = 'search_check_value-' + propertyId;
        if ($('#' + check).val() == '1') {
          $(this).removeClass('btn-secondary').addClass('btn-default').removeClass('active');
          $('#' + check).val('0');
          $('#search-' + propertyId).val('');
          $('#search_min-' + propertyId).val('');
          $('#search_max-' + propertyId).val('');
        $('#search-' + propertyId).selectpicker('refresh');
        }
        else {
          $(this).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#' + check).val('1');
        }
        getVcardList(getSearchParams(''));
      });

      getVcardList(getSearchParams(''));
    }
  }
  xhttp.send();
}

// Export the list
function vcardExport() {

	var params = getSearchParams('');
	document.location.href = '<?php echo $this->url('vcard/export', ['type' => $type]) ?>' + params;
}

// Load the list
function getVcardList(params) {		

  // Execute the ajax request
  let order = ((dir =='ASC') ? '+' : '-') + criterion;
  let route = '<?php echo $this->url('vcard/get', ['type' => $type]) ?>' + params + '&major=' + order;
  xhttp = new XMLHttpRequest();
  xhttp.open("GET", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4) {
      if (xhttp.status == 200) {
        document.getElementById('vcard-list-panel').innerHTML = xhttp.responseText;

        $('#export-button').click(function () { productExport(); });

        // Connect the sort anchors
        $('.vcard-sort-anchor').click(function () {
          criterion = $(this).attr('id').split('-')[0];
          ascCriterion = $('.sort_anchor_up').attr('id');
          descCriterion = $('.sort_anchor_down').attr('id');
          if (criterion + '-anchor' == ascCriterion) dir = 'DESC';
          else if (criterion + '-anchor' == descCriterion) dir = 'ASC';
          else dir = 'ASC';
          getVcardList(getSearchParams(''));
        });

        // Connect the detail anchors
        $('.vcard-detail-anchor').click(function () {
          var id = $(this).attr('id').split('_')[1];
          getVcardDetail($(this).attr('id').split('_')[1]);
          $(this).removeClass("btn-outline-primary").addClass("btn-primary");
        });
        
        $('[data-toggle="tooltip"]').tooltip()
      }
    }
  }
  xhttp.send();
}

$('#modalForm').on('hidden.bs.modal', function (e) {
  getVcardList(getSearchParams(''));
})

function connectAuditPanel()
{
  $('#audit-panel').hide();
  $('#audit-label').click(function () {
    if ($('#audit-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
      $('#audit-panel').show();
      $('#audit-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
    }
    else {
      $('#audit-panel').hide();
      $('#audit-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
    }
  });
}

// Insert a new vcard
function vcardPut()
{
  // Check validity
  let validity = checkFormValidity('vcard-');
  if (validity) {

    // Submit the formData in a PUT request to the server
    let xhttp = new XMLHttpRequest();
    let route = '<?php echo $this->url('vcard/post', ['type' => $type]) ?>';
    xhttp.open('PUT', route, true);
    xhttp.onreadystatechange = function() {
      if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
      if (xhttp.readyState == 4 && xhttp.status == 200) {
        $('#vcard-form-panel').html(xhttp.responseText);
      }
    };
    xhttp.send(getFormData('vcard-'));
  }
  else return false;
}

// Update an existing vcard
function vcardPost(id)
{
  // Check validity
  let validity = checkFormValidity('vcard-');
  if (validity) {

	// Submit the formData in a POST request to the server
    let xhttp = new XMLHttpRequest();
    let route = '<?php echo $this->url('vcard/post', ['type' => $type]) ?>' + '/' + id;
    xhttp.open('POST', route, true);
    xhttp.onreadystatechange = function() {
      if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
      if (xhttp.readyState == 4 && xhttp.status == 200) {
        $('#vcard-form-panel').html(xhttp.responseText);
      }
    };
    xhttp.send(getFormData('vcard-'));
  }
  else return false;
}

// Delete an existing vcard
function vcardDelete(id)
{
  // Submit the DELETE request to the server
  let xhttp = new XMLHttpRequest();
  let route = '<?php echo $this->url('vcard/post', ['type' => $type]) ?>' + '/' + id;
  xhttp.open('DELETE', route, true);
  xhttp.onreadystatechange = function() {
	if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#vcard-form-panel').html(xhttp.responseText);
    }
  };
  xhttp.send();
}

// Retrieve the vcard and display the form
function vcardGet(id, action) {

  let xhttp = new XMLHttpRequest();
  let route = '<?php echo $this->url('vcard/get', ['type' => $type]) ?>' + '/' + id;
  xhttp.open('GET', route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#vcard-form-panel').html(xhttp.responseText);			
      if (id) {
        $('#vcard-update-anchor').click(function () { vcardGet(id, 'update'); });
        $('#vcard-delete-anchor').click(function () { vcardGet(id, 'delete'); });
        $('.cancel-button').click(function () { vcardGet(id, ''); });
      }

      $('.update-focus').focus();
      $('.update_date').datepicker();
      $('.update_time').timepicker({ 'timeFormat':'H:i:s', 'step': 15, 'scrollDefault': 'now' });
      $('.update_selectpicker').selectpicker();

      $('vcard-put-button').click(function () { vcardPut(); });
      $('vcard-post-button').click(function () { vcardPost(id); });
      $('vcard-delete-button').click(function () { vcardDelete(id); });

      $('[data-toggle="tooltip"]').tooltip();
      $('[data-toggle="tooltip"]').click(function () { $('[data-toggle="tooltip"]').tooltip('hide') });
    }
  }
  xhttp.send();
}

// Load the detail panel
function vcardDetail(id) {

  let route = '<?php echo $this->url('vcard/detail', ['type' => $type]) ?>' + '/' + id;

  // Execute the ajax request
  xhttp = new XMLHttpRequest();
  xhttp.open("GET", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
          
      $('#modalForm').html(xhttp.responseText);
      vcardGet(id, '');

      $('#modalForm').modal('toggle');
    }
  }
  xhttp.send();
}

vcardSearch();

</script>
