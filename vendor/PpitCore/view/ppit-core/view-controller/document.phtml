<!-- 
/**
 * PpitCore V1.0 (https://github.com/p-pit/PpitCore)
 *
 * @link      https://github.com/p-pit/PpitCore
 * @copyright Copyright (c) 2016 Bruno Lartillot
 * @license   https://github.com/p-pit/PpitCore/blob/master/license.txt GNU-GPL license
 */
-->

<?php echo $this->partial('/partials/search-scripts-v2') ?>

<script>
var criterion = 'name', dir = 'ASC';

function documentSearch()
{
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", '<?php echo $this->url('document/search', ['type' => $type, 'folder' => $folder]) ?>', true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && (xhttp.status == 200 || xhttp.status == 400)) {
      document.getElementById('document-search-panel').innerHTML = xhttp.responseText;
      
      // Connect the erase button that reset all the search engine inputs and checks and refresh the list
      $('#erase-button').click(function() {
        $('.search_input').val('');
        $('.search_selectpicker').selectpicker('refresh');
        $('.search_check_value').val('0');
        $('.search_check').removeClass('btn-secondary').addClass('btn-default').removeClass('active');
        $('#erase-button').removeClass('btn-success').addClass('btn-default');
        $('#erase-button').attr('disabled', 'disabled');
        getDocumentList(getSearchParams(''));
      });

      $('.search_selectpicker').selectpicker('refresh');

      // Connect the date picker on date inputs
      $('.search_input_date').datepicker();

      // Trigger the change event on search inputs and refresh the list
      $('.search_input').change(function () {
        if ($(this).attr('id')) {
          var propertyId = $(this).attr('id').split('-')[1];
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#search_check_value-' + propertyId).val('1');
	      getDocumentList(getSearchParams(''));
        }
      }); 

      // Trigger the keyup event on search inputs and refresh the list
      $('.search_input').keyup(function () {
        if ($(this).attr('id')) {
          if ($(this).val().length > 2) {
            var propertyId = $(this).attr('id').split('-')[1];
            $('#erase-button').removeClass('btn-default').addClass('btn-success');
            $('#erase-button').attr('disabled', false);
            $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
            $('#search_check_value-' + propertyId).val('1');
            getDocumentList(getSearchParams(''));
          }
        }
      });

      // Trigger the click event on per-property checks (allowing to search on empty values) and refresh the list
      $('.search_check').click(function() {
        $('#erase-button').removeClass('btn-default').addClass('btn-success');
        $('#erase-button').attr('disabled', false);
        var propertyId = $(this).attr('id').split('-')[1], check = 'search_check_value-' + propertyId;
        if ($('#' + check).val() == '1') {
          $(this).removeClass('btn-secondary').addClass('btn-default').removeClass('active');
          $('#' + check).val('0');
          $('#search-' + propertyId).val('');
          $('#search_min-' + propertyId).val('');
          $('#search_max-' + propertyId).val('');
        $('#search-' + propertyId).selectpicker('refresh');
        }
        else {
          $(this).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#' + check).val('1');
        }
        getDocumentList(getSearchParams(''));
      });

      getDocumentList(getSearchParams(''));
    }
  }
  xhttp.send();
}

// Export the list
function documentExport() {

	var params = getSearchParams('');
	document.location.href = '<?php echo $this->url('document/export', ['type' => $type, 'folder' => $folder]) ?>' + params;
}

// Load the list
function getDocumentList(params) {

  // Execute the ajax request
  let order = ((dir =='ASC') ? '' : '-') + criterion;
  let route = '<?php echo $this->url('document/list', ['type' => $type, 'folder' => $folder]) ?>' + params + '&order=' + order;
  xhttp = new XMLHttpRequest();
  xhttp.open("GET", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && (xhttp.status == 200 || xhttp.status == 400)) {
        document.getElementById('document-list-panel').innerHTML = xhttp.responseText;

        // Connect the download buttons
        $('.document-download-btn').click(function () {
          var id = $(this).attr('id').split('_')[1];
          documentDownload($(this).attr('id').split('_')[1]);
        });
        
        $('[data-toggle="tooltip"]').tooltip()
        $('[data-toggle="tooltip"]').click(function () { $('[data-toggle="tooltip"]').tooltip('hide') });
    }
  }
  xhttp.send();
}

$('#modalForm').on('hidden.bs.modal', function (e) {
  getDocumentList(getSearchParams(''));
})

function connectDeleteBtn() {
    let id = $(this).attr('id').split('_')[1];
    $('.document-cancel-btn').show();
    $('.document-checkbox').attr('disabled', true);
    $('.document-btn').attr('disabled', true);
    $('#document-delete-btn_' + id).attr('disabled', false);
    $('#document-delete-btn_' + id).removeClass('btn-outline-primary').addClass('btn-danger');
    $('#document-delete-btn_' + id).unbind('click');
    $('#document-delete-btn_' + id).click(function () { documentDelete(id); });
}

function connectCancelBtn() {
    $('.document-cancel-btn').hide();
    $('.document-checkbox').attr('disabled', false);
    $('.document-btn').attr('disabled', false);
    $('.document-btn').removeClass('btn-warning').removeClass('btn-danger').addClass('btn-outline-primary');
    $('.document-delete-btn').unbind('click');
    $('.document-delete-btn').click(function () { connectDeleteBtn() });
}

// Add a new vard or update an existing vcard
function documentUpload()
{
  // Submit the formData in a POST request to the server
  formData = new FormData();
  let fileSelect = document.getElementById('document-file');
  if (fileSelect) {
    let files = fileSelect.files;
      formData.append('document-file', files[0], files[0].name);
  }

  let xhttp = new XMLHttpRequest();
  let route = '<?php echo $this->url('document/upload', ['type' => $type, 'folder' => $folder]) ?>';
  xhttp.open('POST', route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && (xhttp.status == 200 || xhttp.status == 400)) {
      getDocumentList(getSearchParams(''));
    }
  };
  xhttp.send(formData);
}

// Delete an existing vcard
function documentDelete(id)
{
  // Submit the DELETE request to the server
  let xhttp = new XMLHttpRequest();
  let route = '<?php echo $this->url('document/delete', ['type' => $type, 'folder' => $folder]) ?>' + '/' + id;
  xhttp.open('DELETE', route, true);
  xhttp.onreadystatechange = function() {
	if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && (xhttp.status == 200 || xhttp.status == 400)) {
      $('#vcard-detail-panel').html(xhttp.responseText);
      connectAuditPanel();
    }
  };
  xhttp.send();
}

// Load the detail panel
function vcardDetail(id) {

  let route = '<?php echo $this->url('vcard/detail') ?>' + '/' + id;

  // Execute the ajax request
  xhttp = new XMLHttpRequest();
  xhttp.open("GET", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && (xhttp.status == 200 || xhttp.status == 400)) {
          
      $('#vcard-detail-panel').html(xhttp.responseText);
      connectAuditPanel();

      $('.update-focus').focus();
      $('.update_date').datepicker();
      $('.update_time').timepicker({ 'timeFormat':'H:i:s', 'step': 15, 'scrollDefault': 'now' });
      $('.update_selectpicker').selectpicker();

      $('.vcard-cancel-btn').hide();
      $('.vcard-put-btn').click(function () { 
          vcardPost(id); 
      });
      $('.vcard-post-btn').click(function () { connectPostBtn() });
      $('.vcard-delete-btn').click(function () { connectDeleteBtn() });
      $('.vcard-cancel-btn').click(function () { connectCancelBtn() });

      $('[data-toggle="tooltip"]').tooltip();
      $('[data-toggle="tooltip"]').click(function () { $('[data-toggle="tooltip"]').tooltip('hide') });

      $('#modalForm').modal('toggle');
    }
  }
  xhttp.send();
}

vcardSearch();

</script>
