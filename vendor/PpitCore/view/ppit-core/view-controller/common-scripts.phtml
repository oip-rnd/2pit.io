<!-- 
/**
 * PpitCore V1.0 (https://github.com/p-pit/PpitCore)
 *
 * @link      https://github.com/p-pit/PpitCore
 * @copyright Copyright (c) 2016 Bruno Lartillot
 * @license   https://github.com/p-pit/PpitCore/blob/master/license.txt GNU-GPL license
 */
-->

<script>

function checkFormValidity(prefix)
{
  let validity = true;

  // Check mandatory properties
  $('.' + prefix + 'update-mandatory').each(function () {
    let propertyId = $(this).attr('id');
    let val = $('#' + propertyId).val();
    if (!val) {
      $('#' + propertyId + '-error').html('<?php echo $this->translate('Please input a value', 'ppit-core', $context->getLocale()) ?>');
      validity = false;
    }
  });

  // Check numbers
  $('.' + prefix + 'update-number').each(function () {
    let propertyId = $(this).attr('id');
    let val = $('#' + propertyId).val(), min = $('#' + propertyId).attr('min'), max = $('#' + propertyId).attr('max');

    if (val) {
      let error = checkNumber(val, min, max);
      if (error) {
        $('#' + propertyId + '-error').html(error);
        validity = false;
      }
    }
  });

  // Check dates
  $('.' + prefix + 'update-date').each(function () {
    let propertyId = $(this).attr('id');
    let val = $('#' + propertyId).val();

    if (val) {
      let error = checkDate(val);
      if (error) {
        $('#' + propertyId + '-error').html(error);
        validity = false;
      }
    }
  });

  // Check email
  $('.' + prefix + 'update-email').each(function () {
    let propertyId = $(this).attr('id');
    let val = $('#' + propertyId).val();

    if (val) {
      let error = checkEmail(val);
      if (error) {
        $('#' + propertyId + '-error').html(error);
        validity = false;
      }
      else {
        $(propertyId).val(val);
      }
    }
  });

  // Check phone
  $('.' + prefix + 'update-phone').each(function () {
    let propertyId = $(this).attr('id');
    let val = $('#' + propertyId).val();

    if (val) {
      let error = checkPhone(val);
      if (error) {
        $('#' + propertyId + '-error').html(error);
        validity = false;
      }
      else {
        $(propertyId).val(val);
      }
    }
  });

  return validity;
}

function getFormData(prefix)
{
  // Create a new FormData object.
  let formData = new FormData();

  $('.' + prefix + 'update-input').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let val = $('#' + prefix + propertyId).val();
console.log(propertyId, val);
    formData.append(propertyId, val);
  });

  $('.' + prefix + 'update-date').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let val = $('#' + prefix + propertyId).val();
<?php $dateFormat = $context->dateFormat() ?>
<?php if ($dateFormat[0] == 0 && $dateFormat[1] == 1 && $dateFormat[2] == 2) : ?>
    val = val.substr(0, 4) + "-" + val.substr(5, 2) + "-" + val.substr(8, 2);
<?php elseif ($dateFormat[0] == 1 && $dateFormat[1] == 2 && $dateFormat[2] == 0) : ?>
    val = val.substr(6, 4) + "-" + val.substr(0, 2) + "-" + val.substr(3, 2);
<?php else : ?>
    val = val.substr(6, 4) + "-" + val.substr(3, 2) + "-" + val.substr(0, 2);
<?php endif;?>
    formData.append(propertyId, val);
  });

  $('.' + prefix + 'update-checkbox').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let val = $('#' + prefix + propertyId).attr('checked');
    formData.append(propertyId, val);
  });

  formData.append('csrf', $('#csrf').val());
  formData.append('update_time', $('#' + prefix + 'update_time').val());
  
  return formData;
}

</script>
