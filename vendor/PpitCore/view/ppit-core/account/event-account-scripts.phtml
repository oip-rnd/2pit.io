/**
 * PpitCore V1.0 (https://github.com/p-pit/PpitCore)
 *
 * @link      https://github.com/p-pit/PpitCore
 * @copyright Copyright (c) 2016 Bruno Lartillot
 * @license   https://github.com/p-pit/PpitCore/blob/master/license.txt GNU-GPL license
 */

function getSearchParams(prefix) {

  let params = '?', todo = true;

  $('.search_input_select').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let checked = $('#' + prefix + 'search_check_value-' + propertyId).val();
    let value = $('#' + prefix + 'search-' + propertyId).val();
    if (checked == '1') { params += '&' + propertyId + '=' + value; }
  });

  $('.search_input_text').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let checked = $('#' + prefix + 'search_check_value-' + propertyId).val();
    let value = $('#' + prefix + 'search-' + propertyId).val();
    if (checked == '1') { params += '&' + propertyId + '=' + value; }
  });

  $('.search_input_min').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let checked = $('#' + prefix + 'search_check_value-' + propertyId).val();
    let value = $('#' + prefix + 'search_min-' + propertyId).val();
    if (value.length >= 2 || checked == '1') { params += '&min_' + propertyId + '=' + value; }
  });

  $('.search_input_max').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let checked = $('#' + prefix + 'search_check_value-' + propertyId).val();
    let value = $('#' + prefix + 'search_max-' + propertyId).val();
    if (value.length >= 2 || checked == '1') { params += '&max_' + propertyId + '=' + value; }
  });

  $('.search_input_date_min').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let checked = $('#' + prefix + 'search_check_value-' + propertyId).val();
    let value = $('#' + prefix + 'search_min-' + propertyId).val();
    if (value) value = encodeDate(value);
    if (value.length >= 2 || checked == '1') { params += '&min_' + propertyId + '=' + value; }
  });

  $('.search_input_date_max').each(function () {
    let propertyId = $(this).attr('id').split('-')[1];
    let checked = $('#' + prefix + 'search_check_value-' + propertyId).val();
    let value = $('#' + prefix + 'search_max-' + propertyId).val();
    if (value) value = encodeDate(value);
    if (value.length >= 2 || checked == '1') { params += '&max_' + propertyId + '=' + value; }
  });

  return params;
}

// Load the list
function getAccountList(params, major, dir) {		

	// Execute the ajax request
	var route = '<?php echo $this->url('account/eventAccountList', array('entry' => 'account', 'type' => $type)) ?>' + params + '&event_category=' + '<?php echo $category ?>' + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	var xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4 && xhttp.status == 200) {
			document.getElementById('account_list_panel').innerHTML = xhttp.responseText;
            getPlanning();
			
			// Connect the sort anchors
			$('.ppit-sort-account-anchor').each(function () {
				$(this).click(function () {
					sortAccountList($(this).attr('id').split('-')[0]);
				});
			});

			$('.account-checkbox').each(function () {
				$(this).click(function () {
					getPlanning();
				});
			});
		}
	}
	xhttp.send();
}

function getAccountSearch()
{
  // Process request formatting the search engine
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", '<?php echo $this->url('account/eventAccountSearch', array('entry' => 'account', 'type' => $type)) ?>?', true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4) {
      if (xhttp.status == 200) {
    
        // Update the DOM with the request html content
        $('#account_search_panel').html(xhttp.responseText);
  
        // Connect the erase button that reset all the search engine inputs and checks and refresh the list
        $('#erase-button').click(function() {
          $('.search_input').val('');
          $('.search_selectpicker').selectpicker('refresh');
          $('.search_check_value').val('0');
          $('.search_check').removeClass('btn-secondary').addClass('btn-default').removeClass('active');
          $('#erase-button').removeClass('btn-success').addClass('btn-default');
          $('#erase-button').attr('disabled', 'disabled');
          getAccountList(getSearchParams(''), 'n_fn', 'ASC');
        });
   
        $('.search_selectpicker').selectpicker('refresh');
        
        // Connect the date picker on date inputs
        $('.search_input_date').datepicker();
   
        // Trigger the change event on date inputs and refresh the list
        $('.search_input_date').change(function () {
          var propertyId = $(this).attr('id').split('-')[1];
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#search_check_value-' + propertyId).val('1');
          getAccountList(getSearchParams(''), 'n_fn', 'ASC');
        }); 
   
        // Trigger the change event on select inputs and refresh the list
        $('.search_input_select').change(function () {
          var propertyId = $(this).attr('id').split('-')[1];
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#search_check_value-' + propertyId).val('1');
          getAccountList(getSearchParams(''), 'n_fn', 'ASC');
        }); 

        // Trigger the keyup event on text inputs and refresh the list
        $('.search_input_text').keyup(function () {
          if ($(this).val().length > 2) {
            var propertyId = $(this).attr('id').split('-')[1];
            $('#erase-button').removeClass('btn-default').addClass('btn-success');
            $('#erase-button').attr('disabled', false);
            $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
            $('#search_check_value-' + propertyId).val('1');
            getAccountList(getSearchParams(''), 'n_fn', 'ASC');
          }
        });

        // Trigger the click event on per-property checks (allowing to search on empty values) and refresh the list
        $('.search_check').click(function() {
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          var propertyId = $(this).attr('id').split('-')[1], check = 'search_check_value-' + propertyId;
          if ($('#' + check).val() == '1') {
            $(this).removeClass('btn-secondary').addClass('btn-default').removeClass('active');
            $('#' + check).val('0');
            $('#search-' + propertyId).val('');
//            $('#search-' + propertyId).selectpicker('refresh');
          }
          else {
            $(this).removeClass('btn-default').addClass('btn-secondary').addClass('active');
            $('#' + check).val('1');
          }
          getAccountList(getSearchParams(''), 'n_fn', 'ASC');
        });
  
        // Retrieve and show the initial list
        getAccountList(getSearchParams(''), 'n_fn', 'ASC');
      }
    }
  }
  xhttp.send();
}

function activateCalendar() {
  getAccountSearch();
  createCalendar(false);
}
