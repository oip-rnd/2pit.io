/**
 * PpitCore V1.0 (https://github.com/p-pit/PpitCore)
 *
 * @link      https://github.com/p-pit/PpitCore
 * @copyright Copyright (c) 2016 Bruno Lartillot
 * @license   https://github.com/p-pit/PpitCore/blob/master/license.txt GNU-GPL license
 */

var viewBeginDate = '<?php echo date('Y-m-d') ?>';

function connectRemoveIcon(id, target)
{
	$('#' + id).click(function () {

		// Highlight the clicked button (and only it in its class)
		$('.index-btn').removeClass("btn-primary").addClass("btn-default");
		$('.index-btn').attr('disabled', false);

		$('#' + target).hide();
		filterEventList();
        getPlanning();
	});
}

function eventGetParams() {

	var params = '?', todo = true;

<?php foreach ($content_description['search']['properties'] as $propertyId => $property) : ?>
	<?php if (in_array($property['type'], array('date', 'time', 'datetime', 'number'))) : ?>

	if (document.getElementById('search_check_min_<?php echo $propertyId ?>').checked) {
		var min_<?php echo $propertyId ?> = $('#search_min_<?php echo $propertyId ?>').val();
		<?php if ($property['type'] == 'date') : ?>
			if (min_<?php echo $propertyId ?>) min_<?php echo $propertyId ?> = encodeDate(min_<?php echo $propertyId ?>);
		<?php endif;?>
		params += 'min_<?php echo $propertyId ?>=' + min_<?php echo $propertyId ?> + '&'; 
		todo = false;
	}

	if (document.getElementById('search_check_max_<?php echo $propertyId ?>').checked) {
		var max_<?php echo $propertyId ?> = $('#search_max_<?php echo $propertyId ?>').val();
		<?php if ($property['type'] == 'date') : ?>
			if (max_<?php echo $propertyId ?>) max_<?php echo $propertyId ?> = encodeDate(max_<?php echo $propertyId ?>);
		<?php endif;?>
		params += 'max_<?php echo $propertyId ?>=' + max_<?php echo $propertyId ?> + '&'; 
		todo = false;
	}

	<?php else : ?>
	if (document.getElementById('search_check_<?php echo $propertyId ?>').checked) {
		params += '<?php echo $propertyId ?>=' + $('#search_<?php echo $propertyId ?>').val() + '&'; todo = false;
	}

	<?php endif;?>

<?php endforeach;?>

	<?php
	$todoTitle = $content_description['search']['todoTitle'][$context->getLocale()];
	$searchTitle = $content_description['search']['searchTitle'][$context->getLocale()];
	?>
	$('#mode-text').text((todo) ? '<?php echo $todoTitle ?>' : '<?php echo $searchTitle ?>');

	return params;
}

// Export the list
function exportEventList() {

	var params = eventGetParams();
	document.location.href = '<?php echo $this->url('event/export') ?>/' + '<?php echo $type ?>' + params;
}

function sortEventList(criterion) {

	var dir;
	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (criterion + '-anchor' == ascCriterion) dir = 'DESC'; else dir = 'ASC';
	getEventList(eventGetParams(), criterion, dir);
}

function maskEventList(column) {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	else if (descCriterion) {
		criterion = descCriterion.split('-')[0];
		dir = 'DESC';
	}
	else {
		criterion = 'update_time';
		dir = 'DESC';
	}
	var params = eventGetParams();
	params += '&mask=' + column;
	getEventList(params, criterion, dir);
}

function unmaskEventList(column) {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	else if (descCriterion) {
		criterion = descCriterion.split('-')[0];
		dir = 'DESC';
	}
	else {
		criterion = 'update_time';
		dir = 'DESC';
	}
	var params = eventGetParams();
	params += '&unmask=' + column;
	getEventList(params, criterion, dir);
}

function filterEventList() {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	else if (descCriterion) {
		criterion = descCriterion.split('-')[0];
		dir = 'DESC';
	}
	else {
		criterion = 'update_time';
		dir = 'DESC';
	}
	getEventList(eventGetParams(), criterion, dir);
}

function connectEventSearchInputs() {

	$('#erase-button').click(function () { 
		$('.search_input').val('');
		$('.selectpicker').selectpicker('deselectAll');
		$('.search_check').attr('checked', false);
//		document.location.href = '<?php echo $this->url('event/index', array('type' => $type)) ?>'; 
		filterEventList();
	});

<?php foreach ($content_description['search']['properties'] as $propertyId => $property) : ?>

	<?php if (in_array($property['type'], array('date', 'time', 'datetime', 'number'))) : ?>

	$('#search_check_min_<?php echo $propertyId ?>').change(function () {

		$('#search-button').removeClass('btn-default').addClass('btn-success');
		$('#search-button').unbind('click');
		$('#search-button').click(function () { 
			getEventList(eventGetParams(), 'update_time', 'DESC');
		});
		if (!document.getElementById('search_check_min_<?php echo $propertyId ?>').checked) {
			$('#search_min_<?php echo $propertyId ?>').val('');
		}
	});

	$('#search_min_<?php echo $propertyId ?>').change(function () { 
		$('#search-button').removeClass('btn-default').addClass('btn-success');
		$('#search-button').unbind('click');
		$('#search-button').click(function () { 
			getEventList(eventGetParams(), 'update_time', 'DESC');
		});
		document.getElementById('search_check_min_<?php echo $propertyId ?>').checked = true;	
	});

	$('#search_max_<?php echo $propertyId ?>').change(function () { 
		$('#search-button').removeClass('btn-default').addClass('btn-success');
		$('#search-button').unbind('click');
		$('#search-button').click(function () { 
			getEventList(eventGetParams(), 'update_time', 'DESC');
		});
		document.getElementById('search_check_max_<?php echo $propertyId ?>').checked = true;	
	});

		<?php if ($property['type'] == 'date') : ?>
	$("#search_min_<?php echo $propertyId ?>").datepicker();
	$("#search_max_<?php echo $propertyId ?>").datepicker();
		<?php endif;?>
	
	<?php else : ?>

	$('#search_check_<?php echo $propertyId ?>').change(function () {
		$('#search-button').removeClass('btn-default').addClass('btn-success');
		$('#search-button').unbind('click');
		$('#search-button').click(function () { 
			getEventList(eventGetParams(), 'update_time', 'DESC');
		});
		if (!document.getElementById('search_check_<?php echo $propertyId ?>').checked) {
			$('#search_<?php echo $propertyId ?>').val('');
		}
	});
		
		<?php if (in_array($property['type'], ['select', 'multiselect'])) : ?>
	$('#search_<?php echo $propertyId ?>').change(function () { 
		$('#search-button').removeClass('btn-default').addClass('btn-success');
		$('#search-button').unbind('click');
		$('#search-button').click(function () { 
			getEventList(eventGetParams(), 'update_time', 'DESC');
		});
		document.getElementById('search_check_<?php echo $propertyId ?>').checked = true;
	});
	
		<?php else : ?>
	$('#search_<?php echo $propertyId ?>').keyup(function () {
		$('#search-button').removeClass('btn-default').addClass('btn-success');
		$('#search-button').unbind('click');
		$('#search-button').click(function () { 
			getEventList(eventGetParams(), 'update_time', 'DESC');
		});
		document.getElementById('search_check_<?php echo $propertyId ?>').checked = true;	
	});
	
		<?php endif;?>

	<?php endif;?>
<?php endforeach;?>
}
 
function showChart(params) {

	// Execute the ajax request
	var route = '<?php echo $this->url('event/distribute') ?>' + '<?php echo (($type) ? '/'.$type : '') ?>' + params;
	var xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
		    var option = {
			    responsive: true,
		    };
		    var ctx = document.getElementById("chart").getContext('2d');
			var data = JSON.parse(xhttp.responseText);
			var myChart = new Chart(ctx).Doughnut(data,option);
<?php if (!$config['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
}

// Load the list
function getEventList(params, major, dir) {		

	if ('<?php echo $type ?>') showChart(params);
	
	// Execute the ajax request
	var route = '<?php echo $this->url('event/list') ?>' + '<?php echo (($type) ? '/'.$type : '') ?>' + params + '&major=' + major + (((dir =='ASC') ? '&dir=ASC' : '&dir=DESC') <?php if ($personnalize) : ?> + '&personnalize=true' <?php endif;?>);
	var xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('event-list-panel').innerHTML = xhttp.responseText;
		
			$('#export-button').click(function () { exportEventList(); });

			$('.detail-row').hide();
			$('.invisible').hide();
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});
			
			$('.input_cell').keyup(function () {
				var cells = $(this).val().split('\t');
				k = 0;
				for (i = 0; i < 16; i++) {
					for (j = 0; j < <?php echo count($content_description['list']) ?>; j++) {
						$('#input_cell_' + i + '_' + j).val(cells[k]);
						if (k >= cells.length) break;
						k++;
					}
					if (k >= cells.length) break;
				}
			});
			
			// Connect the sort anchors
			$('.ppit-sort-anchor').each(function () {
				$(this).click(function () {
					sortEventList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the admin anchor
			$('#admin-anchor').click(function () { 
				document.location.href = '<?php echo $this->url('event/index', array('type' => $type)) ?>' <?php if (!$personnalize) : ?> + '?personnalize=true' <?php endif;?>; 
			});

			// Connect the plus (unmask) anchors
			$('.plus-anchor').each(function () {
				$(this).click(function () {
					unmaskEventList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the minus (mask) anchors
			$('.minus-anchor').each(function () {
				$(this).click(function () {
					maskEventList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the group anchors
			$('#event-group-anchor').click(function () {
				getEventListV2(params, major, dir);
			});
			
			// Connect the detail anchors
			$('.event-detail-anchor').each(function () {
				$(this).click(function () {
					getEventDetail($(this).attr('id').split('_')[1]);
				});
			});
			
			// Connect the distribution anchor
			$('.distribution').hide();
			var distributionValue = $('#select-distribution').val();
			$('#distribution_' + distributionValue).show();
			$('#select-distribution').change(function () {
				$('.distribution').hide();
				var distributionValue = $('#select-distribution').val();
				$('#distribution_' + distributionValue).show();
			});
<?php if (!$config['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
	$('#search-button').removeClass('btn-success').addClass('btn-default');
/*	$('#search-button').unbind('click');
	$('#search-button').click(unpressSearchButton);*/
}

// Load the list
function getEventListV2(params, major, dir) {		

	if ('<?php echo $type ?>') showChart(params);
	
	// Execute the ajax request
	var route = '<?php echo $this->url('event/listV2') ?>' + '<?php echo (($type) ? '/'.$type : '') ?>' + params + '&major=' + major + (((dir =='ASC') ? '&dir=ASC' : '&dir=DESC') <?php if ($personnalize) : ?> + '&personnalize=true' <?php endif;?>);
	var xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('event-list-panel').innerHTML = xhttp.responseText;
		
			$('#export-button').click(function () { exportEventList(); });

			$('.detail-row').hide();
			$('.invisible').hide();
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});
			
			$('.input_cell').keyup(function () {
				var cells = $(this).val().split('\t');
				k = 0;
				for (i = 0; i < 16; i++) {
					for (j = 0; j < <?php echo count($content_description['list']) ?>; j++) {
						$('#input_cell_' + i + '_' + j).val(cells[k]);
						if (k >= cells.length) break;
						k++;
					}
					if (k >= cells.length) break;
				}
			});
			
			// Connect the sort anchors
			$('.ppit-sort-anchor').each(function () {
				$(this).click(function () {
					sortEventList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the admin anchor
			$('#admin-anchor').click(function () { 
				document.location.href = '<?php echo $this->url('event/index', array('type' => $type)) ?>' <?php if (!$personnalize) : ?> + '?personnalize=true' <?php endif;?>; 
			});

			// Connect the plus (unmask) anchors
			$('.plus-anchor').each(function () {
				$(this).click(function () {
					unmaskEventList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the minus (mask) anchors
			$('.minus-anchor').each(function () {
				$(this).click(function () {
					maskEventList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the group anchors
			$('#event-group-anchor').click(function () {
				getEventList(params, major, dir);
			});
			
			// Connect the detail anchors
			$('.event-detail-anchor').each(function () {
				$(this).click(function () {
					getEventDetail($(this).attr('id').split('_')[1]);
				});
			});
<?php if (!$config['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();
}

function getAvailability() {
	var id, accounts = '', first = true;
//	$('#calendar').fullCalendar('removeEvents');
	$('.account-checkbox').each(function () {
		if (document.getElementById($(this).attr('id')).checked) {
			id = $(this).attr('id').split('_')[1];
			if (!first) accounts += ',';
			first = false;
			accounts += $('#account_' + id).val();
		}
	});
	route = '<?php echo $this->url('account/getAvailability') ?>' + '?accounts=' + accounts + '&begin=' + viewBeginDate;
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4 && xhttp.status == 200) {
			obj = jQuery.parseJSON(xhttp.responseText);
			jQuery.each(obj, function (name, value) {
				if (value.color) {
					if (value.color.morning) {
						var event={
							id: value.date,
							title: '08:00 - Matinée',
							color: value.color.morning,
							start:  $.fullCalendar.moment(value.date)
						};
						$('#calendar').fullCalendar('renderEvent', event, true);
					}
					if (value.color.afternoon) {
						var event={
							id: value.date,
							title: '14:00 - Après-midi',
							color: value.color.afternoon,
							start:  $.fullCalendar.moment(value.date)
						};
						$('#calendar').fullCalendar('renderEvent', event, true);
					}
					if (value.color.evening) {
						var event={
							id: value.date,
							title: '19:00 - Soir',
							color: value.color.evening,
							start:  $.fullCalendar.moment(value.date)
						};
						$('#calendar').fullCalendar('renderEvent', event, true);
					}
				}
			});
		}
	}
	xhttp.send();
}

// Retrieve the planning
function getPlanning() {
	
	// Execute the ajax request
    begin = new Date($('#calendar').fullCalendar('getView').intervalStart);
    begin = begin.toISOString().substring(0, 10);
    end = new Date($('#calendar').fullCalendar('getView').intervalEnd);
    end = end.toISOString().substring(0, 10);
	getEventList(eventGetParams(), 'update_time', 'DESC');
	route = '<?php echo $this->url('event/planning', ['type' => $type]) ?>' + eventGetParams();
    route += '&begin=' + begin;
    route += '&end=' + end;
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4 && xhttp.status == 200) {
		    $('#calendar').fullCalendar({
		    	lang: '<?php echo substr($context->getLocale(), 0, 2) ?>',
		        defaultView: 'agendaWeek',
		        minTime: '08:00:00'
		    });
			$('#calendar').fullCalendar('removeEvents');
			obj = jQuery.parseJSON(xhttp.responseText);

			jQuery.each(obj, function (name, value) {
				var color = 'lightBlue', textColor = 'black';			
/*				var title = '';
				title += value.properties['caption'];
				if (value.properties['location']) title += ' (' + value.properties['location'] + ')';
				var event={
					id:value.id,
					title: title,
					color: color,
					textColor: textColor,
					start:  $.fullCalendar.moment(value.properties['begin_date'] + ' ' + value.properties['begin_time']), 
					end:  $.fullCalendar.moment(value.properties['begin_date'] + ' ' + value.properties['end_time'])
				};*/
	            var event={
	              id: value.date,
	              title: value.caption,
	              color: color,
                  textColor: textColor,
			      start:  $.fullCalendar.moment(value.begin_date + ' ' + value.begin_time), 
				  end:  $.fullCalendar.moment(value.begin_date + ' ' + value.end_time)
	            };
				$('#calendar').fullCalendar('renderEvent', event, true);
			});

			getAvailability();
		}
	}
	xhttp.send();
}

function connectAuditPanel()
{
	$('#audit-panel').hide();
	$('#audit-label').click(function () {
		if ($('#audit-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
			$('#audit-panel').show();
			$('#audit-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
		}
		else {
			$('#audit-panel').hide();
			$('#audit-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
		}
	});
}

<?php 
$properties = array();
foreach ($content_description['update'] as $propertyId => $property) {
	if ($property['type'] != 'separator') {
		if ($property['type'] == 'number') $properties[$propertyId] = array('type' => $property['type'], 'mandatory' => $property['mandatory'], 'minValue' => $property['minValue'], 'maxValue' => $property['maxValue']);
		else $properties[$propertyId] = array('type' => $property['type'], 'mandatory' => $property['mandatory'], 'maxSize' => ($property['type'] == 'textarea') ? 2047 : 255);
	}
}
$properties['event_update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Event', 'context' => $context, 'properties' => $properties)) 
?>

function connectEventUpdateForm(id, action, target)
{
	$('.update_selectpicker').selectpicker({
	      noneSelectedText: null,
	  });

<?php foreach ($content_description['update'] as $propertyId => $property) : ?>
	<?php if ($property['type'] != 'separator') : ?>
		<?php if ($property['type'] == 'date') : ?>
			$('#input_<?php echo $propertyId ?>').datepicker();
		<?php endif;?>
	<?php endif;?>
<?php endforeach ?>

	var form = document.getElementById('ppit-form');
	form.onsubmit = function(event) {
		event.preventDefault();
	
		// Check validity
		var validity = checkEventUpdateProperties(id);
		if (validity) {
		
			// Create a new FormData object.
			var formData = new FormData();
			
			// Get the properties values
<?php foreach ($properties as $propertyId => $property) : ?>

	<?php if ($property['type'] == 'checkbox') : ?>
			formData.append('<?php echo $propertyId ?>', ((document.getElementById('<?php echo $propertyId ?>').checked) ? 1 : 0));

	<?php elseif ($property['type'] == 'attachment') : ?>
			var fileSelect = document.getElementById('<?php echo $propertyId ?>');
			if (fileSelect) {
				var files = fileSelect.files;
				for (var i = 0; i < files.length; i++) {
					var file = files[i];
					formData.append('<?php echo $propertyId ?>', file, file.name);
				}
			}

	<?php else : ?>
			formData.append('<?php echo $propertyId ?>', $('#<?php echo $propertyId ?>').val());

	<?php endif ?>

<?php endforeach ?>

			var xhttp = new XMLHttpRequest();
			var route;
			route = '<?php echo $this->url('event/update') ?>' + '/' + id + '/<?php echo $type ?>';
			if (action) route += '?act=' + action;
			xhttp.open('POST', route, true);
			// Set up a handler for when the request finishes.
			xhttp.onload = function () {
				if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
				if (xhttp.readyState == 4) {
			<?php if (!$config['isTraceActive']) : ?>
					if (xhttp.status == 200) {
			<?php endif;?>
					document.getElementById(target).innerHTML = xhttp.responseText;
					connectEventUpdateForm(id, action, target);
					$('.action-btn').removeClass('btn-primary').addClass('btn-default');
			<?php if (!$config['isTraceActive']) : ?>
					}
			<?php endif;?>
				}
			};
			xhttp.send(formData);
		}
		else return false;
	}
}

function getEventUpdate(id, action, target) {

	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('event/update') ?>' + '/' + id + '/<?php echo $type ?>';
	if (action) route += '?act=' + action;

	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById(target).innerHTML = xhttp.responseText;
			
			$(function () {
			    $('.tip').tooltip({
			        content: function () {
			            return $(this).prop('title');
			        }
			    });
			});

			if (id) {
				$('#event-update-anchor').click(function () { getEventUpdate(id, 'update', target); });
				$('#event-delete-anchor').click(function () { getEventUpdate(id, 'delete', target); });
			}
			else $('#event-add-anchor').click(function () { getEventUpdate(id, 'add', target); });
			connectEventUpdateForm(id, action, target);
<?php if (!$config['isTraceActive']) : ?>
			}
<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.action-btn').removeClass("btn-primary").addClass("btn-default");
	if (action == 'update') $('#event-update-anchor').removeClass("btn-default").addClass("btn-primary");
	else if (action == 'delete') $('#event-delete-anchor').removeClass("btn-default").addClass("btn-primary");
}

// Load the detail panel
function getEventDetail(id) {

	// Ensure the target is displayed
	$('.detail-row').hide();
	$('#detail-row_' + id).show();

	// Highlight the clicked button (and only it in its class)
	$('.index-btn').removeClass("btn-primary").addClass("btn-default");
	$('.index-btn').attr('disabled', 'disabled');
	$('#event-detail-anchor_' + id).removeClass("btn-default").addClass("btn-primary");

	// Anchor to the new panel
	$(location).attr('hash', 'form_action');

	var route = '<?php echo $this->url('event/detail') ?>' + '/' + id;

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('detail-div_' + id).innerHTML = xhttp.responseText;
			
			connectAuditPanel();
			connectRemoveIcon('remove-anchor', 'detail-row_' + id);

			getEventUpdate(id, '', 'event-update-panel');
	<?php if (!$config['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();
}

function pressSearchButton() {
		$('.search').show();
//		$('#search-button').addClass('active');
/*		$('#search-button').attr('aria-pressed', 'true');
		$('#search-button').unbind('click');
		$('#search-button').click(unpressSearchButton);*/
}

function unpressSearchButton() {
		$('.search').hide();
		$('#search-button').removeClass('active');
		$('#search-button').attr('aria-pressed', 'false');
		$('#search-button').unbind('click');
		$('#search-button').click(pressSearchButton);
}

function createCalendar(print) {
	var minTime = (print) ? '08:00:00' : '00:00:00';
    $('#calendar').fullCalendar({
    	lang: '<?php echo substr($context->getLocale(), 0, 2) ?>',
    	height: 650,
        defaultView: 'agendaWeek',
        scrollTime: '08:00:00',
        minTime: minTime,
        businessHours: {
		   	dow: [ 1, 2, 3, 4, 5, 6], // Monday - Thursday
		    start: '08:00',
		    end: '18:00'
	    },
		customButtons: {
	        myCustomButton: {
	            text: '<?php echo $this->translate('Printable', 'ppit-document', $context->getLocale()) ?>',
	            click: function() {
	                window.open('<?php echo $this->url('event/planning', array('type' => $type)) ?>');
			    }
			}
		},
    	header: {
			left: 'prev,next today myCustomButton',
			center: 'title',
			right: 'month,agendaWeek,agendaDay'
		}
    });

	$('.fc-prev-button').click(function(){
		var moment = $('#calendar').fullCalendar('getDate');
		viewBeginDate = moment.format().slice(0, 10);
		getPlanning();
	});
	
	$('.fc-next-button').click(function(){
		var moment = $('#calendar').fullCalendar('getDate');
		viewBeginDate = moment.format().slice(0, 10);
		getPlanning();
	});
	  
	getPlanning();
}

function getEventSearch()
{
	// Hide the other panels
	$('.ppit-panel').hide();
	$('#index_action').show();
	// Anchor to the main panel
	$(location).attr('hash', '#');
	var xhttp = new XMLHttpRequest();
	xhttp.open("GET", '<?php echo $this->url('event/search') ?>' + '<?php echo (($type) ? '/'.$type : '') ?>', false);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
				document.getElementById('index_action').innerHTML = xhttp.responseText;
//				$('.search').hide();
//				$('#search-button').click(pressSearchButton);
				pressSearchButton();
				<?php $todoTitle = $content_description['search']['todoTitle'][$context->getLocale()] ?>
				$('#mode-text').text('<?php echo $todoTitle ?>');
				connectEventSearchInputs();
<?php if (array_key_exists('calendar', $content_description['options']) && $content_description['options']['calendar']) : ?>
				getAccountList('?', 'n_fn', 'ASC');
				createCalendar(false);
<?php endif;?>
	<?php if (!$config['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();
}

/**
 Event Account List
 */
<?php if (array_key_exists('calendar', $content_description['options']) && $content_description['options']['calendar'] && array_key_exists('account_type', $content_description['options'])) : ?>
function sortAccountList(criterion) {

	var dir;
	ascCriterion = $('.glyphicon-triangle-account-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-account-bottom').first().parent().attr('id');
	if (criterion + '-anchor' == ascCriterion) dir = 'DESC'; else dir = 'ASC';
	getAccountList(getParams(), criterion, dir);
} 

// Load the list
function getAccountList(params, major, dir) {		

	// Execute the ajax request
	route = '<?php echo $this->url('account/eventAccountList', array('entry' => 'account', 'type' => $content_description['options']['account_type'])) ?>' + params + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	var xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
		if (xhttp.readyState == 4 && xhttp.status == 200) {
			document.getElementById('account_list_panel').innerHTML = xhttp.responseText;
			
			// Connect the sort anchors
			$('.ppit-sort-account-anchor').each(function () {
				$(this).click(function () {
					sortAccountList($(this).attr('id').split('-')[0]);
				});
			});

			$('.account-checkbox').each(function () {
				$(this).click(function () {
					getPlanning();
				});
			});
		}
	}
	xhttp.send();
}

function getAccountGroup() {

	// Disabled the list checkboxes
	$('.account-checkbox').attr('disabled', 'disabled');

	var accountNumber = $('#account-number').val();
	for (i = 0, j = 0; i < accountNumber; i++) {
		if (document.getElementById('account-checkbox_' + i).checked) {
			formData.append('account_' + j, $('#account_' + i).val());
			j++;
		}
	}
	formData.append('nb-account', j);

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	xhttp.open("POST", '', true);
	xhttp.onreadystatechange = function() {
			if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
			if (xhttp.readyState == 4 && xhttp.status == 200) {
		}
	}
	xhttp.send(formData);

	// Highlight the clicked button (and only it in its class)
	$('.index-btn').removeClass("btn-primary").addClass("btn-default");
	$('.account-group-anchor').removeClass("btn-default").addClass("btn-primary");
}
<?php endif;?>

function activateEvent() {
	getEventSearch();
	var params = '?';
<?php foreach ($params as $id => $value) : ?>	
	params += '<?php echo $id?>=<?php echo $value ?>&'
<?php endforeach;?>
	getEventList(params, 'identifier', 'ASC');
}
