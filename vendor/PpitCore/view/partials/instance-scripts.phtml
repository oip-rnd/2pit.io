/**
 * PpitCore V1.0 (https://github.com/p-pit/PpitCore)
 *
 * @link      https://github.com/p-pit/PpitCore
 * @copyright Copyright (c) 2016 Bruno Lartillot
 * @license   https://github.com/p-pit/PpitCore/blob/master/license.txt GNU-GPL license
 */


function connectRemoveIcon(id, target)
{
	$('#' + id).click(function () {
		$('#' + target).hide();
		filterInstanceList();
	});
}

function getParams(type) {

	// Create a new FormData object.
	var params = '?', todo = true;
	
	var caption = document.getElementById('search_caption').value;
	if (caption.length >= 2) { params += 'caption=' + caption + '&'; todo = false; }

	$('#mode-text').text((todo) ? '<?php echo $this->translate('Todo list', 'ppit-core', $context->getLocale())?>' : '<?php echo $this->translate('Search', 'ppit-core', $context->getLocale())?>');

	return params;
}

// Export the list
function exportInstanceList() {

	var params = getParams();
	document.location.href = '<?php echo $this->url('instance/export') ?>' + params;
}

function eraseInstanceSearch() {
	$('#search_caption').val('');

	getInstanceList(getParams(), 'caption', 'ASC');
}

function sortInstanceList(criterion) {

	var dir;
	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (criterion + '-anchor' == ascCriterion) dir = 'DESC'; else dir = 'ASC';
	getInstanceList(getParams(), criterion, dir);
}

function filterInstanceList() {

	ascCriterion = $('.glyphicon-triangle-top').first().parent().attr('id');
	descCriterion = $('.glyphicon-triangle-bottom').first().parent().attr('id');
	if (ascCriterion) {
		criterion = ascCriterion.split('-')[0];
		dir = 'ASC';
	}
	getInstanceList(getParams(), criterion, dir);
}

function connectInstanceSearchInputs() {

	$('#export-button').click(function () { exportInstanceList(); });
	
	$('#search_caption').keyup(function () { filterInstanceList(); });
	
	$('#erase-button').unbind();
	$('#erase-button').click(function () { eraseInstanceSearch(); });
}

// Load the list
function getInstanceList(params, major, dir) {		

	// Execute the ajax request
	route = '<?php echo $this->url('instance/list') ?>' + params + '&major=' + major + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('home/index', array('instance_caption' => $context->getInstance()->caption))?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('instance-list-panel').innerHTML = xhttp.responseText;
			
			// Connect the sort anchors
			$('.ppit-sort-anchor').each(function () {
				$(this).click(function () {
					sortInstanceList($(this).attr('id').split('-')[0]);
				});
			});
			
			// Connect the detail anchors
			$('.instance-detail-anchor').each(function () {
				$(this).click(function () {
					getInstanceDetail($(this).attr('id').split('_')[1]);
				});
			});
	<?php if (!$config['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();
}

function connectAuditPanel()
{
	$('#audit-panel').hide();
	$('#audit-label').click(function () {
		if ($('#audit-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
			$('#audit-panel').show();
			$('#audit-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
		}
		else {
			$('#audit-panel').hide();
			$('#audit-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
		}
	});
}

function connectActionAnchors(id, action)
{
	// Show and anchor to the new panel
	$('.action-btn').removeClass('btn-primary').addClass('btn-default');
	$('#' + action + '-anchor').removeClass('btn-default').addClass('btn-primary');
	$('#coinstance-update-panel').show();

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	var route;

	route = '<?php echo $this->url('instance/update') ?>/' + id + '/' + action;
	
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('home/index', array('instance_caption' => $context->getInstance()->caption))?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('instance-update-panel').innerHTML = xhttp.responseText;
			connectInstanceUpdateForm(id, action);
	<?php if (!$config['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();
}

<?php 
$properties = array();

$properties['caption'] = array('type' => 'input', 'mandatory' => true, 'maxSize' => 255);
$properties['is_active'] = array('type' => 'checkbox', 'mandatory' => true);
$properties['comment'] = array('type' => 'input', 'mandatory' => false, 'maxSize' => 255);
$properties['update_time'] = array('type' => 'hidden');

echo $this->partial('/partials/check-update-properties', array('entity' => 'Instance', 'context' => $context, 'properties' => $properties)) 
?>

function connectInstanceUpdateForm(id, action)
{
	var form = document.getElementById('ppit-form');
	form.onsubmit = function(event) {
		
		event.preventDefault();
	
		// Check validity
		var validity = checkInstanceUpdateProperties(id);
	
		if (validity) {
		
			// Create a new FormData object.
			var formData = new FormData();
			
			// Get the properties values
<?php foreach ($properties as $property_id => $property) : ?>

	<?php if ($property['type'] == 'input' || $property['type'] == 'date' || $property['type'] == 'textarea' || $property['type'] == 'select' || $property['type'] == 'number' || $property['type'] == 'email' || $property['type'] == 'phone' || $property['type'] == 'hidden') : ?>
				formData.append('<?php echo $property_id ?>', document.getElementById('<?php echo $property_id ?>').value);

	<?php elseif ($property['type'] == 'checkbox') : ?>
				formData.append('<?php echo $property_id ?>', ((document.getElementById('<?php echo $property_id ?>').checked) ? 1 : 0));

	<?php elseif ($property['type'] == 'file') : ?>
				var fileSelect = document.getElementById('order_form');
				if (fileSelect) {
					var files = fileSelect.files;
					for (var i = 0; i < files.length; i++) {
						var file = files[i];
						formData.append('order_form', file, file.name);
					}
				}

	<?php endif ?>

<?php endforeach ?>

			var xhttp = new XMLHttpRequest();
			var route, target;
			route = '<?php echo $this->url('instance/update') ?>/' + id + '/' + action;
			target = 'instance-update-panel';
			xhttp.open('POST', route, true);
			// Set up a handler for when the request finishes.
			xhttp.onload = function () {
				if (xhttp.readyState == 4 <?php if (!$context->getConfig()['isTraceActive']) echo '&& xhttp.status == 200' ?>) {

<?php if ($context->getConfig()['isTraceActive']) : ?>
					console.log('post, route = ' + route);
					console.log(xhttp.responseText);
<?php endif;?>
					document.getElementById(target).innerHTML = xhttp.responseText;
					getInstanceList('?', 'caption', 'ASC');
					$('.action-btn').removeClass('btn-primary').addClass('btn-default');
				}
			};
			xhttp.send(formData);
		}
		else return false;
	}
}

function getInstanceUpdate(id) {
	
	var xhttp = new XMLHttpRequest();
	var route = '<?php echo $this->url('instance/update') ?>/' + id;

	xhttp.open('GET', route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.readyState == 4 <?php if (!$config['isTraceActive']) echo '&& xhttp.status == 200' ?>) {
			document.getElementById('instance-update-panel').innerHTML = xhttp.responseText;
<?php if ($config['isTraceActive']) : ?>
			console.log('instance-update-panel, route = ' + route);
			console.log(xhttp.responseText);
<?php endif;?>
			
			connectInstanceUpdateForm(id);
		}
	}
	xhttp.send();
}

// Load the detail panel
function getInstanceDetail(id) {

	// Ensure the target is displayed
	$('#form_action').show();

	// Anchor to the new panel
	$(location).attr('hash', 'form_action');

	var route = '<?php echo $this->url('instance/detail') ?>/' + id;

	// Execute the ajax request
	xhttp = new XMLHttpRequest();
	xhttp.open("GET", route, true);
	xhttp.onreadystatechange = function() {
		if (xhttp.status == 401) location.href = '<?php echo $this->url('home/index', array('instance_caption' => $context->getInstance()->caption))?>';
		if (xhttp.readyState == 4) {
	<?php if (!$config['isTraceActive']) : ?>
			if (xhttp.status == 200) {
	<?php endif;?>
			document.getElementById('form_action').innerHTML = xhttp.responseText;

			connectAuditPanel();
			connectRemoveIcon('remove-anchor', 'form_action');
			getInstanceUpdate(id);
			if (id) {
				$('#update-anchor').click(function () { connectActionAnchors(id, 'update'); });
				$('#delete-anchor').click(function () { connectActionAnchors(id, 'delete'); });
			}
	<?php if (!$config['isTraceActive']) : ?>
			}
	<?php endif;?>
		}
	}
	xhttp.send();

	// Highlight the clicked button (and only it in its class)
	$('.index-btn').removeClass("btn-primary").addClass("btn-default");
	$('#instance-detail-anchor_' + id).removeClass("btn-default").addClass("btn-primary");
}

function activateInstance() {
	// Load the search panel and highlight the menu entry
	loadPanel('index_action', '<?php echo $this->url('instance/search') ?>');
	$('.menu-btn').removeClass("btn-primary").addClass("btn-default");
	$('#instance-anchor').removeClass("btn-default").addClass("btn-primary");
	$('#mode-text').text('<?php echo $this->translate('Todo list', 'ppit-core', $context->getLocale())?>');
	
	// Connect the search inputs
	connectInstanceSearchInputs();
	
	getInstanceList('?', 'caption', 'ASC');
}

$('#instance-anchor').click(function () { activateInstance(); });
